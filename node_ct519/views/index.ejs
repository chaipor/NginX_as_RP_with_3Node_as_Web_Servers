<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=`, initial-scale=1.0">
    <title>CT519</title>
    <link rel="stylesheet" href="/css/main_about.css">
    <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@400;600&display=swap" rel="stylesheet">
</head>

<body>
    <div class="center">
        <a href="/about">About</a>
        <a href="/myresearch" class="link">My Research</a>
        <a href="/ct519" class="link">ct519</a>
        <a href="/" class="link">github</a>
        <h1>สรุปความรู้</h1>
        <img src="/images/image3.png" alt="">
    </div>
    <h3>ความรู้เกี่ยวกับการใช้ cloud AWS</h3>
    <p> Amazon Web Services Elastic Compute Cloud หรือที่รู้จักกันในชื่อ AWS EC2 เป็นหนึ่งในบริการคลาวด์คอมพิวติ้งที่ได้รับความนิยมมากที่สุดในปัจจุบัน EC2 ให้บริการเซิร์ฟเวอร์เสมือนที่มีความยืดหยุ่นสูง ช่วยให้องค์กรสามารถปรับขนาดทรัพยากรคอมพิวเตอร์ได้ตามความต้องการ โดยไม่จำเป็นต้องลงทุนในฮาร์ดแวร์ราคาแพง
        การใช้งาน EC2 เริ่มต้นด้วยการเลือก instance type ที่เหมาะสมกับความต้องการของแอปพลิเคชัน ไม่ว่าจะเป็นด้าน CPU, หน่วยความจำ หรือพื้นที่จัดเก็บข้อมูล ผู้ใช้สามารถเลือกระบบปฏิบัติการที่ต้องการ ตั้งแต่ Linux ไปจนถึง Windows Server นอกจากนี้ยังสามารถติดตั้งซอฟต์แวร์เพิ่มเติมได้อย่างอิสระ
        ความปลอดภัยเป็นสิ่งสำคัญสำหรับการใช้งานบนคลาวด์ EC2 มีคุณสมบัติด้านความปลอดภัยหลายอย่าง เช่น security groups ที่ช่วยควบคุมการเข้าถึงเครือข่าย และ key pairs สำหรับการยืนยันตัวตนเมื่อเชื่อมต่อกับ instance นอกจากนี้ยังสามารถเข้ารหัสข้อมูลที่จัดเก็บและส่งผ่านเครือข่ายได้
        หนึ่งในจุดเด่นของ EC2 คือความสามารถในการปรับขนาดได้อย่างรวดเร็ว ด้วยคุณสมบัติ Auto Scaling ระบบสามารถเพิ่มหรือลดจำนวน instances โดยอัตโนมัติตามปริมาณงาน ทำให้รองรับการเติบโตของธุรกิจได้อย่างมีประสิทธิภาพ เมื่อใช้ร่วมกับ Elastic Load Balancing ยิ่งช่วยเพิ่มความน่าเชื่อถือและประสิทธิภาพของระบบ
        ด้านราคา EC2 มีความยืดหยุ่นสูง ผู้ใช้สามารถเลือกจ่ายตามการใช้งานจริงแบบ On-Demand หรือเลือกแบบ Reserved Instances เพื่อประหยัดค่าใช้จ่ายในระยะยาว สำหรับงานที่ไม่เร่งด่วนและทนต่อการหยุดชะงักได้ ยังมีตัวเลือก Spot Instances ที่ช่วยประหยัดค่าใช้จ่ายได้มากกว่า
        โดยสรุป AWS EC2 เป็นบริการที่ช่วยให้องค์กรสามารถใช้ประโยชน์จากคลาวด์คอมพิวติ้งได้อย่างมีประสิทธิภาพ ด้วยความยืดหยุ่น ความปลอดภัย และความคุ้มค่าทางเศรษฐกิจ ทำให้ EC2 เป็นทางเลือกที่น่าสนใจสำหรับการรันแอปพลิเคชันและบริการต่างๆ บนคลาวด์
    </p>
    <div class="center">
        <img src="/images/image2.png" alt="">
    </div>
    <h3>ความรู้เกี่ยวกับการใช้ docker และ docker compose</h3>
    <p>
        ในยุคของการพัฒนาซอฟต์แวร์สมัยใหม่ Docker และ Docker Compose ได้กลายเป็นเครื่องมือสำคัญที่นักพัฒนาใช้เพื่อสร้างและจัดการแอปพลิเคชันอย่างมีประสิทธิภาพ ทั้งสองเทคโนโลยีนี้ช่วยแก้ปัญหาที่เกิดขึ้นบ่อยในกระบวนการพัฒนาและการนำซอฟต์แวร์ไปใช้งานจริง
Docker เป็นแพลตฟอร์มที่ใช้เทคโนโลยีคอนเทนเนอร์ ซึ่งช่วยให้แอปพลิเคชันและส่วนประกอบทั้งหมดที่จำเป็นสามารถทำงานได้ในสภาพแวดล้อมที่แยกออกมาโดยเฉพาะ เรียกว่า "คอนเทนเนอร์" แนวคิดนี้ช่วยลดปัญหา "works on my machine" ที่มักเกิดขึ้นเมื่อแอปพลิเคชันทำงานได้บนเครื่องของนักพัฒนาคนหนึ่ง แต่ไม่สามารถทำงานบนเครื่องอื่นได้
การใช้งาน Docker เริ่มจากการสร้าง Docker Image ซึ่งเป็นเสมือนพิมพ์เขียวของแอปพลิเคชัน โดยใช้ Dockerfile เป็นตัวกำหนดขั้นตอนการสร้าง Image นี้ เมื่อได้ Image แล้ว เราสามารถใช้มันเพื่อสร้างและรันคอนเทนเนอร์ได้อย่างรวดเร็วและสม่ำเสมอ ไม่ว่าจะเป็นบนเครื่องคอมพิวเตอร์ส่วนตัว เซิร์ฟเวอร์ หรือแม้แต่บนคลาวด์
อย่างไรก็ตาม เมื่อแอปพลิเคชันมีความซับซ้อนมากขึ้น และประกอบด้วยหลายส่วนที่ต้องทำงานร่วมกัน เช่น เว็บเซิร์ฟเวอร์ ฐานข้อมูล และระบบแคช การจัดการคอนเทนเนอร์แต่ละตัวแยกกันอาจเป็นเรื่องยุ่งยาก นี่คือจุดที่ Docker Compose เข้ามามีบทบาท
Docker Compose เป็นเครื่องมือที่ช่วยให้เราสามารถกำหนดและจัดการแอปพลิเคชันที่ประกอบด้วยหลายคอนเทนเนอร์ได้อย่างง่ายดาย โดยใช้ไฟล์ YAML เพียงไฟล์เดียว (มักจะชื่อว่า docker-compose.yml) เราสามารถระบุบริการทั้งหมดที่จำเป็นสำหรับแอปพลิเคชัน กำหนดความสัมพันธ์ระหว่างบริการ และตั้งค่าเครือข่าย volume รวมถึงตัวแปรสภาพแวดล้อมต่างๆ
ด้วย Docker Compose เราสามารถสร้างและรันแอปพลิเคชันทั้งหมดด้วยคำสั่งเดียว (docker-compose up) ทำให้การทดสอบและพัฒนาเป็นไปอย่างรวดเร็วและมีประสิทธิภาพ นอกจากนี้ยังช่วยให้การทำงานร่วมกันในทีมเป็นไปอย่างราบรื่น เนื่องจากทุกคนสามารถใช้ไฟล์ docker-compose.yml เดียวกันเพื่อสร้างสภาพแวดล้อมการทำงานที่เหมือนกันได้
โดยสรุป Docker และ Docker Compose เป็นเครื่องมือที่ทรงพลังสำหรับการพัฒนาและการนำซอฟต์แวร์ไปใช้งานในยุคปัจจุบัน ช่วยให้กระบวนการพัฒนามีความสม่ำเสมอ ลดความซับซ้อนในการ deploy และทำให้การ scale แอปพลิเคชันเป็นไปได้อย่างมีประสิทธิภาพมากขึ้น ด้วยเหตุนี้ จึงไม่น่าแปลกใจที่เทคโนโลยีเหล่านี้ได้รับความนิยมอย่างแพร่หลายในวงการพัฒนาซอฟต์แวร์
    </p>


</body>

</html>